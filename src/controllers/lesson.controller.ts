import type { Context, Next } from "hono";
import { LessonService } from "../services/lesson.service.js";

export const LessonController = {
    // üìå T·∫°o ch·ªß ƒë·ªÅ
    createOrUpdate: async (c: Context, next: Next) => {
        const { _id, title, description, order, exercises, vocabularies, progress_id, status } = await c.req.json();
        const result = await LessonService.createOrUpdate(_id, title, description, order, exercises, vocabularies, progress_id, status);
        return c.json({ message: "Th·ª±c hi·ªán th√†nh c√¥ng", data: result }, 200);
    },
    // üìå L·∫•y chi ti·∫øt b√†i h·ªçc
    getDetail: async (c: Context, next: Next) => {
        const { lesson_id } = c.req.param();
        const result = await LessonService.getDetail(lesson_id);
        return c.json({ message: "L·∫•y chi ti·∫øt b√†i h·ªçc th√†nh c√¥ng", data: result }, 200);
    },
    // üìå Get all lesson
    getAll: async (c: Context, next: Next) => {
        // L·∫•y query params v·ªõi gi√° tr·ªã m·∫∑c ƒë·ªãnh
        const page = Number(c.req.query("page")) || 1;
        const limit = Number(c.req.query("limit")) || 10;
        const search = c.req.query("search") || "";
        // G·ªçi service ƒë·ªÉ l·∫•y d·ªØ li·ªáu
        const lessons = await LessonService.getAll(page, limit, search);
        return c.json({ message: "L·∫•y danh s√°ch b√†i h·ªçc th√†nh c√¥ng", data: lessons }, 200);
    },
    // üìå X√≥a b√†i h·ªçc
    deleteLesson: async (c: Context, next: Next) => {
        const { lesson_id } = c.req.param();
        const result = await LessonService.deleteLesson(lesson_id);
        return c.json({ message: "X√≥a b√†i h·ªçc th√†nh c√¥ng", data: result}, 200);
    },
    // import lesson
    importLesson: async (c: Context, next: Next) => {
        const body = await c.req.parseBody();
        const file = body["file"];
        const result = await LessonService.importLesson(file);
        return c.json({ message: "Import b√†i h·ªçc th√†nh c√¥ng", data: result }, 200);
    },
};
