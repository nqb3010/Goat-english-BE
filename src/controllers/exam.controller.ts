import type { Context, Next } from "hono";
import { ExamService } from "../services/exam.service.js";

export const ExamController = {
    // üìå T·∫°o ho·∫∑c c·∫≠p nh·∫≠t ƒë·ªÅ thi
    createOrUpdate: async (c: Context, next: Next) => {
        const { _id, name, description, image, topic_id, exercises, total_questions, duration, status } = await c.req.json();
        const result = await ExamService.createOrUpdate(_id, name, description, image, topic_id, exercises, total_questions, duration, status);
        return c.json({ message: "Th·ª±c hi·ªán th√†nh c√¥ng", data: result }, 200);
    },
    // üìå L·∫•y chi ti·∫øt ƒë·ªÅ thi
    getDetail: async (c: Context, next: Next) => {
        const { exam_id } = c.req.param();
        const result = await ExamService.getDetail(exam_id);
        return c.json({ message: "L·∫•y chi ti·∫øt ƒë·ªÅ thi th√†nh c√¥ng", data: result }, 200);
    },
    // üìå Get all exam
    getAll: async (c: Context, next: Next) => {
        // L·∫•y query params v·ªõi gi√° tr·ªã m·∫∑c ƒë·ªãnh
        const page = Number(c.req.query("page")) || 1;
        const limit = Number(c.req.query("limit")) || 10;
        const search = c.req.query("search") || "";
        // G·ªçi service ƒë·ªÉ l·∫•y d·ªØ li·ªáu
        const exams = await ExamService.getAll(page, limit, search);
        return c.json({ message: "L·∫•y danh s√°ch ƒë·ªÅ thi th√†nh c√¥ng", data: exams }, 200);
    },
    // üìå L·∫•y ƒë·ªÅ thi theo topic_id
    getByTopicId: async (c: Context, next: Next) => {
        const { topic_id } = c.req.param();
        const result = await ExamService.getByTopicId(topic_id);
        return c.json({ message: "L·∫•y ƒë·ªÅ thi theo topic_id th√†nh c√¥ng", data: result }, 200);
    },
    // // üìå X√≥a ƒë·ªÅ thi
    // deleteExam: async (c: Context, next: Next) => {
    //     const { exam_id } = c.req.param();
    //     const result = await ExamService.deleteExam(exam_id);
    //     return c.json({ message: "X√≥a ƒë·ªÅ thi th√†nh c√¥ng", data: result}, 200);
    // },
    // // import exam
    // importExam: async (c: Context, next: Next) => {
    //     const body = await c.req.parseBody();
    //     const file = body["file"];
    //     const result = await ExamService.importExam(file);
    //     return c.json({ message: "Import ƒë·ªÅ thi th√†nh c√¥ng", data: result }, 200);
    // },
};